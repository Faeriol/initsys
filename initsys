#! /usr/bin/env python
"""initsys helps you init your remote system.
The base script connects to the remote machine.
It then proceedes to download your key and call itself to initialize your settings
Usage:
initsys [remotemachine] [githubhandle]\tWith remotemachine being the ssh connect string"""

import os
import sys

data = "https://raw.githubusercontent.com/Faeriol/initsys-data/master/"

def copyKey(server, githubUser):
    """Execute from local for bootstrap... for now"""
    key = "https://github.com/" +githubUser +".keys"
    command = "ssh " +server 
    command += " '[ -d ~/.ssh ] || mkdir ~/.ssh; curl -o ~/.ssh/authorized_keys " +key +"; chmod -R 0700 ~/.ssh'"
    os.system(command)

def dlLocalAlias():
    myAliasFile = data +"bash_alias"
    os.system("curl -o .bash_alias " +myAliasFile)
    home = os.path.expanduser("~")
    with open(home +"/.bashrc", 'a+') as brc:
        brc.write("\nsource .bash_alias\n")

def dlInitsys(server):
    myInitsys = "https://raw.githubusercontent.com/Faeriol/initsys/master/initsys"
    os.system("ssh " +server +" curl -o initsys " +myInitsys)

def dlLocalVimrc():
    myVimrc = data +"vimrc"
    os.system("curl -o .vimrc " +myVimrc)

def dlLocalScreenrc():
    myScreenrc = data +"screenrc"
    os.system("curl -o .screenrc " +myScreenrc)

def usage():
    print(__doc__)

if __name__ == "__main__":
    if len(sys.argv) > 2 :
        if sys.argv[1] == "remote":
            dlLocalAlias()
            dlLocalVimrc()
            dlLocalScreenrc()
        elif len(sys.argv) == 3:
            print("Let's enable Faeriol's config on this machine: " +sys.argv[1] +" with github user: " +sys.argv[2])
            copyKey(sys.argv[1], sys.argv[2])
            dlInitsys(sys.argv[1])
            os.system("ssh " +sys.argv[1] +" python ./initsys remote")
            print("DONE")
        else:
            usage()
    else:
        usage()
